import { Book } from './book.js';
import { Genre } from './models.js';
import { BookCollection, ProductCollection } from './book-collection.js';
import { Collection } from './collection.js';
import { Notepad } from './notepad.js';
import { getBookInfo } from './google-books.js';
const harryPotterIsbn = '9781408845646';
new Collection();
new Collection();
new Collection();
new Collection();
const jkRowling = {
    firstName: 'J. K.',
    lastName: 'Rowling',
    // rating: 4.6,
};
const harryPotter = new Book('Harry Potter', Genre.fantasy, 500, jkRowling);
const superNotepad = new Notepad('Super text', 44);
const cart = new ProductCollection();
cart.set(harryPotter.name, harryPotter);
cart.set(superNotepad.name, superNotepad);
const favoriteBooksShelf = new BookCollection();
favoriteBooksShelf.set(harryPotter.name, harryPotter);
const getSummary = (collection) => {
    if (collection instanceof BookCollection) {
        return `Total ${cart.size} books on the shelf`;
    }
    if (collection instanceof ProductCollection) {
        return `Total ${cart.price} for ${cart.size} items`;
    }
    return 'No special summary for this kind of collection';
};
console.log(getSummary(cart));
console.log(getSummary(favoriteBooksShelf));
getBookInfo(harryPotterIsbn)
    .then((book) => {
    console.log(book.volumeInfo.title, book.volumeInfo.description, book.volumeInfo.authors[0]);
})
    .catch((error) => console.error(error));
const optionalAuthor = {
    rating: 5,
    booksWritten: 11,
};
const fullAuthor = {
    firstName: '',
    lastName: '',
    birthDate: new Date(),
    booksWritten: 1,
    rating: 2,
};
const author = {
    firstName: 'J.K.',
    lastName: 'Rowling',
};
const book = new Book('Harry Potter', Genre.fantasy, 100, author);
console.log(book);
const authorWithoutRating = {
    firstName: 'first name',
    lastName: 'last name',
    birthDate: new Date(),
    booksWritten: 100500,
};
const newAuthor = {};
const anotherAuther = {
    firstName: '',
    lastName: '',
    birthDate: new Date(),
    booksWritten: 12,
    rating: 1,
};
// anotherAuther.booksWritten = 1000;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLElBQUksRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUMvQixPQUFPLEVBQWEsS0FBSyxFQUEyQixNQUFNLGFBQWEsQ0FBQztBQUN4RSxPQUFPLEVBQUMsY0FBYyxFQUFFLGlCQUFpQixFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFDdkUsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzNDLE9BQU8sRUFBQyxPQUFPLEVBQUMsTUFBTSxjQUFjLENBQUM7QUFDckMsT0FBTyxFQUFDLFdBQVcsRUFBQyxNQUFNLG1CQUFtQixDQUFDO0FBRTlDLE1BQU0sZUFBZSxHQUFHLGVBQWUsQ0FBQztBQUV4QyxJQUFJLFVBQVUsRUFBZ0IsQ0FBQztBQUMvQixJQUFJLFVBQVUsRUFBZ0IsQ0FBQztBQUMvQixJQUFJLFVBQVUsRUFBZ0IsQ0FBQztBQUMvQixJQUFJLFVBQVUsRUFBUSxDQUFDO0FBRXZCLE1BQU0sU0FBUyxHQUFlO0lBQzVCLFNBQVMsRUFBRSxPQUFPO0lBQ2xCLFFBQVEsRUFBRSxTQUFTO0lBQ25CLGVBQWU7Q0FDaEIsQ0FBQztBQUVGLE1BQU0sV0FBVyxHQUFHLElBQUksSUFBSSxDQUFDLGNBQWMsRUFBRSxLQUFLLENBQUMsT0FBTyxFQUFFLEdBQUcsRUFBRSxTQUFTLENBQUMsQ0FBQztBQUU1RSxNQUFNLFlBQVksR0FBRyxJQUFJLE9BQU8sQ0FBQyxZQUFZLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFFbkQsTUFBTSxJQUFJLEdBQUcsSUFBSSxpQkFBaUIsRUFBRSxDQUFDO0FBQ3JDLElBQUksQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxXQUFXLENBQUMsQ0FBQztBQUN4QyxJQUFJLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxJQUFJLEVBQUUsWUFBWSxDQUFDLENBQUM7QUFFMUMsTUFBTSxrQkFBa0IsR0FBRyxJQUFJLGNBQWMsRUFBRSxDQUFDO0FBQ2hELGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFLFdBQVcsQ0FBQyxDQUFDO0FBRXRELE1BQU0sVUFBVSxHQUFHLENBQUMsVUFBK0IsRUFBVSxFQUFFO0lBQzdELElBQUksVUFBVSxZQUFZLGNBQWMsRUFBRTtRQUN4QyxPQUFPLFNBQVMsSUFBSSxDQUFDLElBQUkscUJBQXFCLENBQUM7S0FDaEQ7SUFFRCxJQUFJLFVBQVUsWUFBWSxpQkFBaUIsRUFBRTtRQUMzQyxPQUFPLFNBQVMsSUFBSSxDQUFDLEtBQUssUUFBUSxJQUFJLENBQUMsSUFBSSxRQUFRLENBQUM7S0FDckQ7SUFFRCxPQUFPLGdEQUFnRCxDQUFDO0FBQzFELENBQUMsQ0FBQztBQUVGLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUM7QUFDOUIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxDQUFDO0FBRTVDLFdBQVcsQ0FBQyxlQUFlLENBQUM7S0FDekIsSUFBSSxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7SUFDYixPQUFPLENBQUMsR0FBRyxDQUNULElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUNyQixJQUFJLENBQUMsVUFBVSxDQUFDLFdBQVcsRUFDM0IsSUFBSSxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQzNCLENBQUM7QUFDSixDQUFDLENBQUM7S0FDRCxLQUFLLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztBQUUxQyxNQUFNLGNBQWMsR0FBb0I7SUFDdEMsTUFBTSxFQUFFLENBQUM7SUFDVCxZQUFZLEVBQUUsRUFBRTtDQUNqQixDQUFDO0FBRUYsTUFBTSxVQUFVLEdBQThCO0lBQzVDLFNBQVMsRUFBRSxFQUFFO0lBQ2IsUUFBUSxFQUFFLEVBQUU7SUFDWixTQUFTLEVBQUUsSUFBSSxJQUFJLEVBQUU7SUFDckIsWUFBWSxFQUFFLENBQUM7SUFDZixNQUFNLEVBQUUsQ0FBQztDQUNWLENBQUM7QUFFRixNQUFNLE1BQU0sR0FBZTtJQUN6QixTQUFTLEVBQUUsTUFBTTtJQUNqQixRQUFRLEVBQUUsU0FBUztDQUNwQixDQUFDO0FBRUYsTUFBTSxJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUMsY0FBYyxFQUFFLEtBQUssQ0FBQyxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0FBRWxFLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLENBQUM7QUFFbEIsTUFBTSxtQkFBbUIsR0FBNEI7SUFDbkQsU0FBUyxFQUFFLFlBQVk7SUFDdkIsUUFBUSxFQUFFLFdBQVc7SUFDckIsU0FBUyxFQUFFLElBQUksSUFBSSxFQUFFO0lBQ3JCLFlBQVksRUFBRSxNQUFNO0NBQ3JCLENBQUM7QUFFRixNQUFNLFNBQVMsR0FBcUIsRUFBRSxDQUFDO0FBRXZDLE1BQU0sYUFBYSxHQUFzQjtJQUN2QyxTQUFTLEVBQUUsRUFBRTtJQUNiLFFBQVEsRUFBRSxFQUFFO0lBQ1osU0FBUyxFQUFFLElBQUksSUFBSSxFQUFFO0lBQ3JCLFlBQVksRUFBRSxFQUFFO0lBQ2hCLE1BQU0sRUFBRSxDQUFDO0NBQ1YsQ0FBQztBQUVGLHFDQUFxQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Qm9va30gZnJvbSAnLi9ib29rLmpzJztcclxuaW1wb3J0IHtCb29rQXV0aG9yLCBHZW5yZSwgSUF1dGhvciwgSU9wdGlvbmFsQXV0aG9yfSBmcm9tICcuL21vZGVscy5qcyc7XHJcbmltcG9ydCB7Qm9va0NvbGxlY3Rpb24sIFByb2R1Y3RDb2xsZWN0aW9ufSBmcm9tICcuL2Jvb2stY29sbGVjdGlvbi5qcyc7XHJcbmltcG9ydCB7Q29sbGVjdGlvbn0gZnJvbSAnLi9jb2xsZWN0aW9uLmpzJztcclxuaW1wb3J0IHtOb3RlcGFkfSBmcm9tICcuL25vdGVwYWQuanMnO1xyXG5pbXBvcnQge2dldEJvb2tJbmZvfSBmcm9tICcuL2dvb2dsZS1ib29rcy5qcyc7XHJcblxyXG5jb25zdCBoYXJyeVBvdHRlcklzYm4gPSAnOTc4MTQwODg0NTY0Nic7XHJcblxyXG5uZXcgQ29sbGVjdGlvbjxCb29rLCBudW1iZXI+KCk7XHJcbm5ldyBDb2xsZWN0aW9uPEJvb2ssIG51bWJlcj4oKTtcclxubmV3IENvbGxlY3Rpb248Qm9vaywgc3ltYm9sPigpO1xyXG5uZXcgQ29sbGVjdGlvbjxCb29rPigpO1xyXG5cclxuY29uc3QgamtSb3dsaW5nOiBCb29rQXV0aG9yID0ge1xyXG4gIGZpcnN0TmFtZTogJ0ouIEsuJyxcclxuICBsYXN0TmFtZTogJ1Jvd2xpbmcnLFxyXG4gIC8vIHJhdGluZzogNC42LFxyXG59O1xyXG5cclxuY29uc3QgaGFycnlQb3R0ZXIgPSBuZXcgQm9vaygnSGFycnkgUG90dGVyJywgR2VucmUuZmFudGFzeSwgNTAwLCBqa1Jvd2xpbmcpO1xyXG5cclxuY29uc3Qgc3VwZXJOb3RlcGFkID0gbmV3IE5vdGVwYWQoJ1N1cGVyIHRleHQnLCA0NCk7XHJcblxyXG5jb25zdCBjYXJ0ID0gbmV3IFByb2R1Y3RDb2xsZWN0aW9uKCk7XHJcbmNhcnQuc2V0KGhhcnJ5UG90dGVyLm5hbWUsIGhhcnJ5UG90dGVyKTtcclxuY2FydC5zZXQoc3VwZXJOb3RlcGFkLm5hbWUsIHN1cGVyTm90ZXBhZCk7XHJcblxyXG5jb25zdCBmYXZvcml0ZUJvb2tzU2hlbGYgPSBuZXcgQm9va0NvbGxlY3Rpb24oKTtcclxuZmF2b3JpdGVCb29rc1NoZWxmLnNldChoYXJyeVBvdHRlci5uYW1lLCBoYXJyeVBvdHRlcik7XHJcblxyXG5jb25zdCBnZXRTdW1tYXJ5ID0gKGNvbGxlY3Rpb246IENvbGxlY3Rpb248dW5rbm93bj4pOiBzdHJpbmcgPT4ge1xyXG4gIGlmIChjb2xsZWN0aW9uIGluc3RhbmNlb2YgQm9va0NvbGxlY3Rpb24pIHtcclxuICAgIHJldHVybiBgVG90YWwgJHtjYXJ0LnNpemV9IGJvb2tzIG9uIHRoZSBzaGVsZmA7XHJcbiAgfVxyXG5cclxuICBpZiAoY29sbGVjdGlvbiBpbnN0YW5jZW9mIFByb2R1Y3RDb2xsZWN0aW9uKSB7XHJcbiAgICByZXR1cm4gYFRvdGFsICR7Y2FydC5wcmljZX0gZm9yICR7Y2FydC5zaXplfSBpdGVtc2A7XHJcbiAgfVxyXG5cclxuICByZXR1cm4gJ05vIHNwZWNpYWwgc3VtbWFyeSBmb3IgdGhpcyBraW5kIG9mIGNvbGxlY3Rpb24nO1xyXG59OyAgXHJcblxyXG5jb25zb2xlLmxvZyhnZXRTdW1tYXJ5KGNhcnQpKTtcclxuY29uc29sZS5sb2coZ2V0U3VtbWFyeShmYXZvcml0ZUJvb2tzU2hlbGYpKTtcclxuXHJcbmdldEJvb2tJbmZvKGhhcnJ5UG90dGVySXNibilcclxuICAudGhlbigoYm9vaykgPT4ge1xyXG4gICAgY29uc29sZS5sb2coXHJcbiAgICAgIGJvb2sudm9sdW1lSW5mby50aXRsZSxcclxuICAgICAgYm9vay52b2x1bWVJbmZvLmRlc2NyaXB0aW9uLFxyXG4gICAgICBib29rLnZvbHVtZUluZm8uYXV0aG9yc1swXVxyXG4gICAgKTtcclxuICB9KVxyXG4gIC5jYXRjaCgoZXJyb3IpID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKTtcclxuXHJcbmNvbnN0IG9wdGlvbmFsQXV0aG9yOiBJT3B0aW9uYWxBdXRob3IgPSB7XHJcbiAgcmF0aW5nOiA1LFxyXG4gIGJvb2tzV3JpdHRlbjogMTEsXHJcbn07XHJcblxyXG5jb25zdCBmdWxsQXV0aG9yOiBSZXF1aXJlZDxJT3B0aW9uYWxBdXRob3I+ID0ge1xyXG4gIGZpcnN0TmFtZTogJycsXHJcbiAgbGFzdE5hbWU6ICcnLFxyXG4gIGJpcnRoRGF0ZTogbmV3IERhdGUoKSxcclxuICBib29rc1dyaXR0ZW46IDEsXHJcbiAgcmF0aW5nOiAyLFxyXG59O1xyXG5cclxuY29uc3QgYXV0aG9yOiBCb29rQXV0aG9yID0ge1xyXG4gIGZpcnN0TmFtZTogJ0ouSy4nLFxyXG4gIGxhc3ROYW1lOiAnUm93bGluZycsXHJcbn07XHJcblxyXG5jb25zdCBib29rID0gbmV3IEJvb2soJ0hhcnJ5IFBvdHRlcicsIEdlbnJlLmZhbnRhc3ksIDEwMCwgYXV0aG9yKTtcclxuXHJcbmNvbnNvbGUubG9nKGJvb2spO1xyXG5cclxuY29uc3QgYXV0aG9yV2l0aG91dFJhdGluZzogT21pdDxJQXV0aG9yLCAncmF0aW5nJz4gPSB7XHJcbiAgZmlyc3ROYW1lOiAnZmlyc3QgbmFtZScsXHJcbiAgbGFzdE5hbWU6ICdsYXN0IG5hbWUnLFxyXG4gIGJpcnRoRGF0ZTogbmV3IERhdGUoKSxcclxuICBib29rc1dyaXR0ZW46IDEwMDUwMCxcclxufTtcclxuXHJcbmNvbnN0IG5ld0F1dGhvcjogUGFydGlhbDxJQXV0aG9yPiA9IHt9O1xyXG5cclxuY29uc3QgYW5vdGhlckF1dGhlcjogUmVhZG9ubHk8SUF1dGhvcj4gPSB7XHJcbiAgZmlyc3ROYW1lOiAnJyxcclxuICBsYXN0TmFtZTogJycsXHJcbiAgYmlydGhEYXRlOiBuZXcgRGF0ZSgpLFxyXG4gIGJvb2tzV3JpdHRlbjogMTIsXHJcbiAgcmF0aW5nOiAxLFxyXG59O1xyXG5cclxuLy8gYW5vdGhlckF1dGhlci5ib29rc1dyaXR0ZW4gPSAxMDAwO1xyXG4iXX0=