import { Book } from './book.js';
import { books } from './book-collection.js';
import { genreMapping } from './constants.js';
/**
 * Находит книгу по жанру и количеству страниц
 *
 * @param {string} genre Жанр
 * @param {number} pageAmount Количество страниу
 * @returns {Book}
 */
export function findSuitableBook(genre, pageAmount, multipleRecommendations = true) {
    const findAlgorithm = (book) => book.genre === genre && book.price <= pageAmount;
    if (multipleRecommendations) {
        return books.filter(findAlgorithm);
    }
    return books.find(findAlgorithm);
}
/**
 * Возвращает переданный параметром объект в виде строки.
 *
 * @param {unknown} value - входной параметр, обычно типа object.
 * @returns {string} - сериализованный объект.
 */
export function serialize(value) {
    if (value === null || undefined) {
        return value + '';
    }
    if (value instanceof Book) {
        return `${value.name}, ${value.genre}, ${value.price}`;
    }
    return value.toString();
}
/**
 * Показывает рейтинг книги или автора в виде звездочек.
 *
 * @param {IRatingable} entity - рейтинг
 * @returns {string} - рейтинг в виде *
 */
export const showRating = (entity) => {
    if (entity.rating === null) {
        return 'not rated yet';
    }
    const roundedRating = Math.round(entity.rating);
    let rating = '';
    for (let i = 0; i < roundedRating; i++) {
        rating += ' * ';
    }
    return rating + ` (${entity.rating.toFixed(2)})`;
};
/**
 * Функция для отображения корзины продуктов.
 *
 * @param {IProduct} products - массив продуктов
 * @returns {void}
 */
export const showCart = (products) => {
    let totalPrice = 0;
    products.forEach((product) => {
        totalPrice += product.price;
        console.log(`${product.getProductDescription()} x ${product.price} rub. `);
    });
    console.log(`\nTotal items: ${products.length}, total cost: ${totalPrice}`);
};
/**
 * Функция для получения имени жинраю
 *
 * @param {Genre} genre - жанр из енама
 * @returns {string} - имя жанра в строковом виде
 */
export const getGenreName = (genre) => genreMapping[genre];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLElBQUksRUFBQyxNQUFNLFdBQVcsQ0FBQztBQUMvQixPQUFPLEVBQUMsS0FBSyxFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFFM0MsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTlDOzs7Ozs7R0FNRztBQUNILE1BQU0sVUFBVSxnQkFBZ0IsQ0FBRSxLQUFZLEVBQUUsVUFBa0IsRUFBRSx1QkFBdUIsR0FBRyxJQUFJO0lBQ2hHLE1BQU0sYUFBYSxHQUFHLENBQUMsSUFBVSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxLQUFLLEtBQUssSUFBSSxJQUFJLENBQUMsS0FBSyxJQUFJLFVBQVUsQ0FBQztJQUV2RixJQUFJLHVCQUF1QixFQUFFO1FBQzNCLE9BQU8sS0FBSyxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsQ0FBQztLQUNwQztJQUVELE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztBQUNuQyxDQUFDO0FBRUQ7Ozs7O0dBS0c7QUFDSCxNQUFNLFVBQVUsU0FBUyxDQUFFLEtBQWM7SUFDdkMsSUFBSSxLQUFLLEtBQUssSUFBSSxJQUFJLFNBQVMsRUFBRTtRQUMvQixPQUFPLEtBQUssR0FBRyxFQUFFLENBQUM7S0FDbkI7SUFFRCxJQUFJLEtBQUssWUFBWSxJQUFJLEVBQUU7UUFDekIsT0FBTyxHQUFHLEtBQUssQ0FBQyxJQUFJLEtBQUssS0FBSyxDQUFDLEtBQUssS0FBSyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7S0FDeEQ7SUFFRCxPQUFPLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztBQUMxQixDQUFDO0FBR0Q7Ozs7O0dBS0c7QUFDSCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsQ0FBQyxNQUFtQixFQUFFLEVBQUU7SUFDaEQsSUFBSSxNQUFNLENBQUMsTUFBTSxLQUFLLElBQUksRUFBRTtRQUMxQixPQUFPLGVBQWUsQ0FBQztLQUN4QjtJQUVELE1BQU0sYUFBYSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBRWhELElBQUksTUFBTSxHQUFHLEVBQUUsQ0FBQztJQUVoQixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsYUFBYSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQ3RDLE1BQU0sSUFBSSxLQUFLLENBQUM7S0FDakI7SUFFRCxPQUFPLE1BQU0sR0FBRyxLQUFLLE1BQU0sQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7QUFDbkQsQ0FBQyxDQUFBO0FBRUQ7Ozs7O0dBS0c7QUFDSCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsQ0FBQyxRQUFvQixFQUFFLEVBQUU7SUFDL0MsSUFBSSxVQUFVLEdBQUcsQ0FBQyxDQUFDO0lBQ25CLFFBQVEsQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTtRQUMzQixVQUFVLElBQUksT0FBTyxDQUFDLEtBQUssQ0FBQztRQUM1QixPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsT0FBTyxDQUFDLHFCQUFxQixFQUFFLE1BQU0sT0FBTyxDQUFDLEtBQUssUUFBUSxDQUFDLENBQUM7SUFDN0UsQ0FBQyxDQUFDLENBQUM7SUFFSCxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixRQUFRLENBQUMsTUFBTSxpQkFBaUIsVUFBVSxFQUFFLENBQUMsQ0FBQztBQUM5RSxDQUFDLENBQUE7QUFFRDs7Ozs7R0FLRztBQUNILE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxDQUFDLEtBQVksRUFBVSxFQUFFLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtCb29rfSBmcm9tICcuL2Jvb2suanMnO1xyXG5pbXBvcnQge2Jvb2tzfSBmcm9tICcuL2Jvb2stY29sbGVjdGlvbi5qcyc7XHJcbmltcG9ydCB7SVJhdGluZ2FibGUsIElQcm9kdWN0LCBHZW5yZX0gZnJvbSAnLi9tb2RlbHMuanMnO1xyXG5pbXBvcnQgeyBnZW5yZU1hcHBpbmcgfSBmcm9tICcuL2NvbnN0YW50cy5qcyc7XHJcblxyXG4vKipcclxuICog0J3QsNGF0L7QtNC40YIg0LrQvdC40LPRgyDQv9C+INC20LDQvdGA0YMg0Lgg0LrQvtC70LjRh9C10YHRgtCy0YMg0YHRgtGA0LDQvdC40YZcclxuICogXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBnZW5yZSDQltCw0L3RgFxyXG4gKiBAcGFyYW0ge251bWJlcn0gcGFnZUFtb3VudCDQmtC+0LvQuNGH0LXRgdGC0LLQviDRgdGC0YDQsNC90LjRg1xyXG4gKiBAcmV0dXJucyB7Qm9va31cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBmaW5kU3VpdGFibGVCb29rIChnZW5yZTogR2VucmUsIHBhZ2VBbW91bnQ6IG51bWJlciwgbXVsdGlwbGVSZWNvbW1lbmRhdGlvbnMgPSB0cnVlKTogQm9vayB8IEJvb2tbXSB8IHVuZGVmaW5lZCB7XHJcbiAgY29uc3QgZmluZEFsZ29yaXRobSA9IChib29rOiBCb29rKSA9PiBib29rLmdlbnJlID09PSBnZW5yZSAmJiBib29rLnByaWNlIDw9IHBhZ2VBbW91bnQ7XHJcblxyXG4gIGlmIChtdWx0aXBsZVJlY29tbWVuZGF0aW9ucykge1xyXG4gICAgcmV0dXJuIGJvb2tzLmZpbHRlcihmaW5kQWxnb3JpdGhtKTtcclxuICB9XHJcblxyXG4gIHJldHVybiBib29rcy5maW5kKGZpbmRBbGdvcml0aG0pO1xyXG59XHJcblxyXG4vKipcclxuICog0JLQvtC30LLRgNCw0YnQsNC10YIg0L/QtdGA0LXQtNCw0L3QvdGL0Lkg0L/QsNGA0LDQvNC10YLRgNC+0Lwg0L7QsdGK0LXQutGCINCyINCy0LjQtNC1INGB0YLRgNC+0LrQuC5cclxuICogXHJcbiAqIEBwYXJhbSB7dW5rbm93bn0gdmFsdWUgLSDQstGF0L7QtNC90L7QuSDQv9Cw0YDQsNC80LXRgtGALCDQvtCx0YvRh9C90L4g0YLQuNC/0LAgb2JqZWN0LlxyXG4gKiBAcmV0dXJucyB7c3RyaW5nfSAtINGB0LXRgNC40LDQu9C40LfQvtCy0LDQvdC90YvQuSDQvtCx0YrQtdC60YIuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gc2VyaWFsaXplICh2YWx1ZTogdW5rbm93bikge1xyXG4gIGlmICh2YWx1ZSA9PT0gbnVsbCB8fCB1bmRlZmluZWQpIHtcclxuICAgIHJldHVybiB2YWx1ZSArICcnO1xyXG4gIH1cclxuXHJcbiAgaWYgKHZhbHVlIGluc3RhbmNlb2YgQm9vaykge1xyXG4gICAgcmV0dXJuIGAke3ZhbHVlLm5hbWV9LCAke3ZhbHVlLmdlbnJlfSwgJHt2YWx1ZS5wcmljZX1gO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHZhbHVlLnRvU3RyaW5nKCk7XHJcbn1cclxuXHJcblxyXG4vKipcclxuICog0J/QvtC60LDQt9GL0LLQsNC10YIg0YDQtdC50YLQuNC90LMg0LrQvdC40LPQuCDQuNC70Lgg0LDQstGC0L7RgNCwINCyINCy0LjQtNC1INC30LLQtdC30LTQvtGH0LXQui5cclxuICogXHJcbiAqIEBwYXJhbSB7SVJhdGluZ2FibGV9IGVudGl0eSAtINGA0LXQudGC0LjQvdCzXHJcbiAqIEByZXR1cm5zIHtzdHJpbmd9IC0g0YDQtdC50YLQuNC90LMg0LIg0LLQuNC00LUgKlxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IHNob3dSYXRpbmcgPSAoZW50aXR5OiBJUmF0aW5nYWJsZSkgPT4ge1xyXG4gIGlmIChlbnRpdHkucmF0aW5nID09PSBudWxsKSB7XHJcbiAgICByZXR1cm4gJ25vdCByYXRlZCB5ZXQnO1xyXG4gIH1cclxuXHJcbiAgY29uc3Qgcm91bmRlZFJhdGluZyA9IE1hdGgucm91bmQoZW50aXR5LnJhdGluZyk7XHJcblxyXG4gIGxldCByYXRpbmcgPSAnJztcclxuXHJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCByb3VuZGVkUmF0aW5nOyBpKyspIHtcclxuICAgIHJhdGluZyArPSAnICogJztcclxuICB9XHJcblxyXG4gIHJldHVybiByYXRpbmcgKyBgICgke2VudGl0eS5yYXRpbmcudG9GaXhlZCgyKX0pYDtcclxufVxyXG5cclxuLyoqXHJcbiAqINCk0YPQvdC60YbQuNGPINC00LvRjyDQvtGC0L7QsdGA0LDQttC10L3QuNGPINC60L7RgNC30LjQvdGLINC/0YDQvtC00YPQutGC0L7Qsi5cclxuICogXHJcbiAqIEBwYXJhbSB7SVByb2R1Y3R9IHByb2R1Y3RzIC0g0LzQsNGB0YHQuNCyINC/0YDQvtC00YPQutGC0L7QslxyXG4gKiBAcmV0dXJucyB7dm9pZH1cclxuICovXHJcbmV4cG9ydCBjb25zdCBzaG93Q2FydCA9IChwcm9kdWN0czogSVByb2R1Y3RbXSkgPT4ge1xyXG4gIGxldCB0b3RhbFByaWNlID0gMDtcclxuICBwcm9kdWN0cy5mb3JFYWNoKChwcm9kdWN0KSA9PiB7XHJcbiAgICB0b3RhbFByaWNlICs9IHByb2R1Y3QucHJpY2U7XHJcbiAgICBjb25zb2xlLmxvZyhgJHtwcm9kdWN0LmdldFByb2R1Y3REZXNjcmlwdGlvbigpfSB4ICR7cHJvZHVjdC5wcmljZX0gcnViLiBgKTtcclxuICB9KTtcclxuXHJcbiAgY29uc29sZS5sb2coYFxcblRvdGFsIGl0ZW1zOiAke3Byb2R1Y3RzLmxlbmd0aH0sIHRvdGFsIGNvc3Q6ICR7dG90YWxQcmljZX1gKTtcclxufVxyXG5cclxuLyoqXHJcbiAqINCk0YPQvdC60YbQuNGPINC00LvRjyDQv9C+0LvRg9GH0LXQvdC40Y8g0LjQvNC10L3QuCDQttC40L3RgNCw0Y5cclxuICogXHJcbiAqIEBwYXJhbSB7R2VucmV9IGdlbnJlIC0g0LbQsNC90YAg0LjQtyDQtdC90LDQvNCwXHJcbiAqIEByZXR1cm5zIHtzdHJpbmd9IC0g0LjQvNGPINC20LDQvdGA0LAg0LIg0YHRgtGA0L7QutC+0LLQvtC8INCy0LjQtNC1XHJcbiAqL1xyXG5leHBvcnQgY29uc3QgZ2V0R2VucmVOYW1lID0gKGdlbnJlOiBHZW5yZSk6IHN0cmluZyA9PiBnZW5yZU1hcHBpbmdbZ2VucmVdO1xyXG4iXX0=