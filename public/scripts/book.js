import { Product } from './product.js';
export class Book extends Product {
    constructor(name, genre, price, author, reviews) {
        super(price);
        this.name = name;
        this.genre = genre;
        this.author = author;
        if (reviews) {
            this.reviews = reviews;
        }
        else {
            this.reviews = null;
        }
        this.calculateRating();
    }
    getProductDescription() {
        return `Book "${this.name}" by ${this.author.firstName} ${this.author.lastName}`;
    }
    addReview(review) {
        this.reviews.push(review);
        this.calculateRating();
    }
    removeReview(review) {
        const index = this.reviews.indexOf(review);
        if (index > -1) {
            this.reviews.splice(index, 1);
            this.calculateRating();
        }
    }
    get rating() {
        return this._rating;
    }
    getRreviews() {
        return this.reviews;
    }
    calculateRating() {
        var _a, _b;
        if (((_a = this.reviews) === null || _a === void 0 ? void 0 : _a.length) > 0) {
            const reviewSum = this.reviews.reduce((acc, curr) => acc + curr[1], 0);
            this._rating = reviewSum / ((_b = this.reviews) === null || _b === void 0 ? void 0 : _b.length);
        }
        else {
            this._rating = null;
        }
    }
    calculateDiscount(context) {
        const { cart: { items, totalSum } } = context !== null && context !== void 0 ? context : {};
        if (items >= 3 && totalSum >= 3000) {
            return this.price * 35 / 100;
        }
        else {
            return super.calculateDiscount(context);
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9vay5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9ib29rLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQU9BLE9BQU8sRUFBQyxPQUFPLEVBQUMsTUFBTSxjQUFjLENBQUM7QUFFckMsTUFBTSxPQUFPLElBQUssU0FBUSxPQUFPO0lBTy9CLFlBQ0UsSUFBWSxFQUNaLEtBQVksRUFDWixLQUFhLEVBQ2IsTUFBa0IsRUFDbEIsT0FBbUI7UUFFbkIsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ2IsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDakIsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDbkIsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7UUFFckIsSUFBSSxPQUFPLEVBQUU7WUFDWCxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztTQUN4QjthQUFNO1lBQ0wsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7U0FDckI7UUFFRCxJQUFJLENBQUMsZUFBZSxFQUFHLENBQUM7SUFDMUIsQ0FBQztJQUVNLHFCQUFxQjtRQUMxQixPQUFPLFNBQVMsSUFBSSxDQUFDLElBQUksUUFBUSxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ25GLENBQUM7SUFFTSxTQUFTLENBQUUsTUFBZTtRQUMvQixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUMxQixJQUFJLENBQUMsZUFBZSxFQUFHLENBQUM7SUFDMUIsQ0FBQztJQUVNLFlBQVksQ0FBRSxNQUFlO1FBQ2xDLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBRTNDLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQyxFQUFFO1lBQ2QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQzlCLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztTQUN4QjtJQUNILENBQUM7SUFFRCxJQUFXLE1BQU07UUFDZixPQUFPLElBQUksQ0FBQyxPQUFPLENBQUM7SUFDdEIsQ0FBQztJQUVNLFdBQVc7UUFDaEIsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3RCLENBQUM7SUFFTyxlQUFlOztRQUNyQixJQUFJLENBQUEsTUFBQSxJQUFJLENBQUMsT0FBTywwQ0FBRSxNQUFNLElBQUcsQ0FBQyxFQUFFO1lBQzVCLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxFQUFFLENBQUMsR0FBRyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUV2RSxJQUFJLENBQUMsT0FBTyxHQUFHLFNBQVMsSUFBRyxNQUFBLElBQUksQ0FBQyxPQUFPLDBDQUFFLE1BQU0sQ0FBQSxDQUFDO1NBQ2pEO2FBQU07WUFDTCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztTQUNyQjtJQUNILENBQUM7SUFFUyxpQkFBaUIsQ0FBQyxPQUF5QjtRQUNuRCxNQUFNLEVBQUMsSUFBSSxFQUFFLEVBQUMsS0FBSyxFQUFFLFFBQVEsRUFBQyxFQUFDLEdBQUcsT0FBTyxhQUFQLE9BQU8sY0FBUCxPQUFPLEdBQUksRUFBRSxDQUFDO1FBRWhELElBQUksS0FBSyxJQUFJLENBQUMsSUFBSSxRQUFRLElBQUksSUFBSSxFQUFFO1lBQ2xDLE9BQU8sSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLEdBQUcsR0FBRyxDQUFDO1NBQzlCO2FBQU07WUFDTCxPQUFPLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUN6QztJQUNILENBQUM7Q0FDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgQm9va0F1dGhvcixcclxuICBHZW5yZSxcclxuICBJUmF0aW5nYWJsZSxcclxuICBUUmV2aWV3LFxyXG4gIElQdXJjaGFzZUNvbnRleHRcclxufSBmcm9tICcuL21vZGVscy5qcyc7XHJcbmltcG9ydCB7UHJvZHVjdH0gZnJvbSAnLi9wcm9kdWN0LmpzJztcclxuXHJcbmV4cG9ydCBjbGFzcyBCb29rIGV4dGVuZHMgUHJvZHVjdCBpbXBsZW1lbnRzIElSYXRpbmdhYmxlIHtcclxuICBwdWJsaWMgbmFtZTogc3RyaW5nO1xyXG4gIHB1YmxpYyBnZW5yZTogR2VucmU7XHJcbiAgcHVibGljIGF1dGhvcjogQm9va0F1dGhvcjtcclxuICBwcml2YXRlIF9yYXRpbmc6IG51bWJlcjtcclxuICBwcml2YXRlIHJldmlld3M6IFRSZXZpZXdbXTtcclxuICAgIFxyXG4gIGNvbnN0cnVjdG9yIChcclxuICAgIG5hbWU6IHN0cmluZyxcclxuICAgIGdlbnJlOiBHZW5yZSxcclxuICAgIHByaWNlOiBudW1iZXIsXHJcbiAgICBhdXRob3I6IEJvb2tBdXRob3IsXHJcbiAgICByZXZpZXdzPzogVFJldmlld1tdLFxyXG4gICkge1xyXG4gICAgc3VwZXIocHJpY2UpO1xyXG4gICAgdGhpcy5uYW1lID0gbmFtZTtcclxuICAgIHRoaXMuZ2VucmUgPSBnZW5yZTtcclxuICAgIHRoaXMuYXV0aG9yID0gYXV0aG9yO1xyXG5cclxuICAgIGlmIChyZXZpZXdzKSB7XHJcbiAgICAgIHRoaXMucmV2aWV3cyA9IHJldmlld3M7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLnJldmlld3MgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuY2FsY3VsYXRlUmF0aW5nICgpO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldFByb2R1Y3REZXNjcmlwdGlvbiAoKTogc3RyaW5nIHtcclxuICAgIHJldHVybiBgQm9vayBcIiR7dGhpcy5uYW1lfVwiIGJ5ICR7dGhpcy5hdXRob3IuZmlyc3ROYW1lfSAke3RoaXMuYXV0aG9yLmxhc3ROYW1lfWA7XHJcbiAgfVxyXG5cclxuICBwdWJsaWMgYWRkUmV2aWV3IChyZXZpZXc6IFRSZXZpZXcpOiB2b2lkIHtcclxuICAgIHRoaXMucmV2aWV3cy5wdXNoKHJldmlldyk7XHJcbiAgICB0aGlzLmNhbGN1bGF0ZVJhdGluZyAoKTtcclxuICB9XHJcblxyXG4gIHB1YmxpYyByZW1vdmVSZXZpZXcgKHJldmlldzogVFJldmlldyk6IHZvaWQge1xyXG4gICAgY29uc3QgaW5kZXggPSB0aGlzLnJldmlld3MuaW5kZXhPZihyZXZpZXcpO1xyXG5cclxuICAgIGlmIChpbmRleCA+IC0xKSB7XHJcbiAgICAgIHRoaXMucmV2aWV3cy5zcGxpY2UoaW5kZXgsIDEpO1xyXG4gICAgICB0aGlzLmNhbGN1bGF0ZVJhdGluZygpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldCByYXRpbmcgKCk6IG51bWJlciB7XHJcbiAgICByZXR1cm4gdGhpcy5fcmF0aW5nO1xyXG4gIH1cclxuXHJcbiAgcHVibGljIGdldFJyZXZpZXdzICgpOiBSZWFkb25seTxUUmV2aWV3W10+IHtcclxuICAgIHJldHVybiB0aGlzLnJldmlld3M7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGNhbGN1bGF0ZVJhdGluZyAoKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5yZXZpZXdzPy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGNvbnN0IHJldmlld1N1bSA9IHRoaXMucmV2aWV3cy5yZWR1Y2UoKGFjYywgY3VycikgPT4gYWNjICsgY3VyclsxXSwgMCk7XHJcblxyXG4gICAgICB0aGlzLl9yYXRpbmcgPSByZXZpZXdTdW0gLyB0aGlzLnJldmlld3M/Lmxlbmd0aDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX3JhdGluZyA9IG51bGw7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgY2FsY3VsYXRlRGlzY291bnQoY29udGV4dDogSVB1cmNoYXNlQ29udGV4dCk6IG51bWJlciB7XHJcbiAgICBjb25zdCB7Y2FydDoge2l0ZW1zLCB0b3RhbFN1bX19ID0gY29udGV4dCA/PyB7fTtcclxuXHJcbiAgICBpZiAoaXRlbXMgPj0gMyAmJiB0b3RhbFN1bSA+PSAzMDAwKSB7XHJcbiAgICAgIHJldHVybiB0aGlzLnByaWNlICogMzUgLyAxMDA7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gc3VwZXIuY2FsY3VsYXRlRGlzY291bnQoY29udGV4dCk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==